<resources>

    <!-- Base application theme.-->
    <!--    为Android设置Material Components主题  https://www.jianshu.com/p/533b397c63f0-->
    <!--    原因分析：默认的<Button>标签其实是MaterialButton ， MaterialButton 会自动忽略<background>，.Bridge-->
    <!--    DayNight自动暗/亮主题-->
    <style name="BaseAppTheme" parent="@style/Theme.MaterialComponents.DayNight.NoActionBar">

        <!--Appbar背景色-->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!--状态栏颜色-->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--(checkbox 填充)控制各个控件被选中时的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
        <!--底部导航栏颜色-->
        <item name="android:navigationBarColor">@color/light_blue</item>
        <!--ToolBar上的Title颜色-->
        <item name="android:textColorPrimary">@color/textColorPrimary</item>
        <!--(checkbox 边框) 各个控制控件的默认颜色-->
        <item name="android:colorControlNormal">@color/grey700</item>
        <!--(页面背景色) colorBackground不仅影响主窗口的背景，而且影响所有组件的背景，例如除非您在组件布局中覆盖它。-->
        <item name="android:colorBackground">@color/colorBackground</item>
        <!--(页面背景色) windowBackground只影响主窗口的背景,优先级比colorBackground高。-->
        <item name="android:windowBackground">@color/colorBackground</item>


        <!--    colorPrimary：(Appbar背景色)您的应用的主要品牌颜色，主要用于主题 -->
<!--        <item name="colorPrimary">@color/colorPrimary</item>-->
<!--            colorPrimaryVariant：您的主要品牌颜色的较浅/较暗变体，在主题中很少使用-->
        <item name="colorPrimaryVariant">@color/colorPrimaryVariant</item>
        <!--    colorOnPrimary：用于显示在原色上方的元素的颜色（例如，文本和图标，根据可访问性，通常为白色或半透明的黑色）-->
        <item name="colorOnPrimary">@color/colorOnPrimary</item>
        <!--    colorSecondary：您应用程式的次要品牌色彩，主要用于强调某些需要突出的小部件-->
        <item name="colorSecondary">@color/colorSecondary</item>
        <!--    colorSecondaryVariant：您的次要品牌颜色的较浅/较深变体，在主题中很少使用-->
        <item name="colorSecondaryVariant">@color/colorSecondaryVariant</item>
        <!--    colorOnSecondary：用于显示在辅助颜色顶部的元素的颜色-->
        <item name="colorOnSecondary">@color/colorOnSecondary</item>
        <!--    colorError：用于错误的颜色（通常为红色阴影）-->
        <item name="colorError">@color/colorError</item>
        <!--    colorOnError：用于显示在错误颜色顶部的元素的颜色-->
        <item name="colorOnError">@color/colorOnError</item>
        <!--    colorSurface：(夜间模式标题栏颜色、菜单栏背景色)用于表面的颜色（即材料“纸张”）-->
        <item name="colorSurface">@color/colorSurface</item>
        <!--    colorOnSurface：用于显示在表面颜色顶部的元素的颜色-->
        <item name="colorOnSurface">@color/colorOnSurface</item>
        <!--    colorOnBackground：用于显示在背景色上方的元素的颜色-->
        <item name="colorOnBackground">@color/colorOnBackground</item>


        <!--关闭启动窗口-->
        <item name="android:windowDisablePreview">true</item>
        <item name="android:listDivider">@drawable/bg_divider</item>
        <item name="textAppearanceButton">@style/AppTextAppearance.Button</item>
        <item name="actionBarSize">44dp</item>
        <item name="android:textSize">16sp</item>
        <item name="android:windowAnimationStyle">@style/WindowAnimationFadeInOut</item>
    </style>

    <!--    字体风格-->
    <style name="AppTextAppearance.Button" parent="TextAppearance.MaterialComponents.Button">
        <item name="android:textAllCaps">false</item>
    </style>

    <style name="AppTheme" parent="BaseAppTheme.NoActionBar"></style>

    <style name="SplashTheme" parent="BaseAppTheme.NoActionBar">
        <item name="android:windowFullscreen">true</item>
        <!--将顶部状态栏设置为透明，并将界面内容布局上边界上提至状态栏顶部-->
        <item name="android:windowTranslucentStatus">true</item>
        <!--如果有底部虚拟导航栏，则将底部虚拟导航栏设置为透明，并将界面内容布局下边界下沉至虚拟导航栏底部-->
        <item name="android:windowTranslucentNavigation">true</item>
        <!--给window窗口设置背景图-->
        <!--        <item name="android:windowBackground">@drawable/splash_view</item>-->
    </style>

    <style name="BaseAppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.MaterialComponents.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.MaterialComponents.Light" />

    <style name="ThemeTabLayoutStyle" parent="Base.Widget.Design.TabLayout">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:background">@color/colorPrimary</item>
        <item name="tabIndicatorColor">@color/white</item>
        <item name="tabIndicatorHeight">@dimen/dp_1</item>
        <item name="tabSelectedTextColor">@color/white</item>
        <item name="tabTextAppearance">@style/MyTabTextAppearance</item>
    </style>


    <style name="MyTabTextAppearance">
        <item name="android:textSize">@dimen/sp_14</item>
        <item name="textAllCaps">false</item>
        <item name="android:textColor">?android:textColorSecondary</item>
    </style>

    <style name="TopTabLayoutStyle" parent="Base.Widget.Design.TabLayout">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">40dp</item>
        <item name="android:background">@color/colorPrimary</item>
        <item name="tabIndicatorColor">@color/white</item>
        <item name="tabIndicatorHeight">@dimen/dp_4</item>
        <item name="tabSelectedTextColor">@color/white</item>
        <item name="tabTextAppearance">@style/MyTabTextAppearance</item>
    </style>

    <style name="TopTabTextAppearance">
        <item name="android:textSize">@dimen/sp_14</item>
        <item name="textAllCaps">false</item>
        <item name="android:textColor">?android:textColorSecondary</item>
    </style>
    <!--页面切换动画 淡入淡出-->
    <style name="WindowAnimationFadeInOut">
        <item name="android:windowEnterAnimation">@anim/fade_in</item>
        <item name="android:windowExitAnimation">@anim/fade_out</item>
    </style>

    <!--    <style name="ToolbarStyle" parent="AppTheme">-->
    <!--        <item name="android:textColorSecondary">@android:color/white</item>-->
    <!--        <item name="searchHintIcon">@null</item>-->
    <!--    </style>-->


    <!--    &lt;!&ndash; 设置Toolbar标题字体的大小 &ndash;&gt;-->
    <!--    <style name="Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">-->
    <!--        <item name="android:textSize">@dimen/sp_18</item>-->
    <!--    </style>-->

    <!-- 浮动窗口动画 -->
    <style name="anim_float_view">
        <item name="android:windowEnterAnimation">@anim/push_up_in</item>
        <item name="android:windowExitAnimation">@anim/push_up_out</item>
    </style>

    <style name="MenuLabelsStyle">
        <item name="android:background">@drawable/fab_label_background</item>
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:textSize">@dimen/sp_14</item>
        <item name="android:maxLines">2</item>
        <item name="android:ellipsize">end</item>
    </style>

    <style name="MenuButtonsStyle">
        <item name="fab_size">mini</item>
        <!--去掉button背景色和边框,高版本按钮会有黑色阴影框-->
        <item name="android:outlineProvider">none</item>
        <item name="fab_showAnimation">@anim/jump_from_down</item>
        <item name="fab_hideAnimation">@anim/jump_to_down</item>
        <item name="fab_shadowColor">#444</item>
        <item name="fab_colorNormal">@color/colorPrimary</item>
        <item name="fab_colorPressed">@color/colorPrimary</item>
        <item name="fab_colorRipple">@color/colorPrimary</item>
    </style>

    <style name="RecyclerViewStyle">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:scrollbarSize">@dimen/dp_2</item>
        <item name="android:scrollbars">vertical</item>
    </style>


</resources>
